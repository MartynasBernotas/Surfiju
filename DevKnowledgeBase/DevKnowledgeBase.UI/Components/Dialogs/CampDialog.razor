@using DevKnowledgeBase.UI.Models

@inject ICampService CampService

<MudDialog FullWidth="true" MaxWidth="MaxWidth.Medium">
    <DialogContent>
        <MudForm @ref="form" Model="@Camp">
            <MudGrid>
                <MudItem xs="12" sm="6">
                    <MudTextField @bind-Value="Camp.Name" Label="Name" Required="true" />
                </MudItem>
                <MudItem xs="12" sm="6">
                    <LocationInput @bind-Value="Camp.Location" Class="location-input-dialog" />
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudDatePicker @bind-Date="Camp.StartDate" Label="Start Date" Required="true" />
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudDatePicker @bind-Date="Camp.EndDate" Label="End Date" Required="true" />
                </MudItem>
                <MudItem xs="12">
                    <MudTextField @bind-Value="Camp.Description" Label="Description" Lines="3" Required="true" />
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudNumericField @bind-Value="Camp.MaxParticipants" Label="Max Participants" Min="1" Required="true" />
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudNumericField @bind-Value="Camp.Price" Label="Price ($)" Min="0" Required="true" />
                </MudItem>
                <MudItem xs="3">
                    <MudSwitch T="bool" Label="Public Camp" @bind-Checked="Camp.IsPublic" Color="Color.Primary" UncheckedColor="Color.Dark" />
                </MudItem>
                <MudItem xs="12">
                    <PhotoUploader ExistingPhotos="@Camp.PhotoUrls"
                                   OnExistingPhotoRemoved="@RemovePhoto"
                                   OnPendingFilesChanged="@UpdatePendingFiles"
                                   @ref="photoUploader" />
                </MudItem>
            </MudGrid>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Save</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] IMudDialogInstance MudDialog { get; set; } = null!;
    private MudForm form = null!;
    private PhotoUploader photoUploader = null!;
    private List<IBrowserFile> pendingFiles = new();

    [Parameter]
    public CampModel Camp { get; set; } = new CampModel
        {
            StartDate = DateTime.Today,
            EndDate = DateTime.Today.AddDays(7),
            IsPublic = true
        };

    private void UpdatePendingFiles(List<IBrowserFile> files)
    {
        pendingFiles = files;
    }

    private void RemovePhoto(string photo)
    {
        Camp.PhotoUrls.Remove(photo);
    }

    private async Task Submit()
    {
        foreach (var file in pendingFiles)
        {
            var photoUrl = await CampService.UploadPhotoAsync(file);
            Camp.PhotoUrls.Add(photoUrl);
        }
        await CampService.UpdateCampAsync(Camp);
        MudDialog.Close(DialogResult.Ok(Camp));
    }

    private void Cancel() => MudDialog.Cancel();
}
